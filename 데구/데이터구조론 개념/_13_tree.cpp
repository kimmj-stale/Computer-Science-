/**
 * Tree 구조
 * 하나 이상의 노드로 구성된 유한집합
 * 하나의 루트(root)노드와 나머지 노드들로 구성 (분리집합 T1 , T2 , .... 들로 분할)
 * 하나의 값에 여러개의 값이 대응되는 1 : n 의 비선형 구조(non - linear concept)
 * 원소들 간의 계층을 갖는 계층형 구조 (부모 노드 - 자식 노드의 1 : n 대응)
*/

/*
//  Tree의 용어

• 노드(node) : 트리의 구성요소
• 서브트리(subtree) : 하나의 노드와 그 노드들의 자손들로 이루어진 트리
• 노드의 차수(degree) : 노드의 서브트리 개수 - //뻗어 나간 가지의 갯수
• 루트(root) 노드 : 부모가 없는 노드 - //최상위 계층의 노드
• 단말(terminal) 노드 : 자식이 없는 노드, 차수가 0 - //최하위 계층의 노드
• 형제(sibling) 노드 : 부모가 같은 자식들
• 트리의 차수 : max{ 노드의 차수 } - //모든 노드가 가지는 차수의 합
• 노드 레벨 : 트리의 각 층의 번호 - //트리를 뒤집었을 때 해당 노드의 층수
✓ 루트노드: 레벨1, 자식노드의 레벨 = 부모레벨 + 1
• 트리의 높이 : max{ 노드 레벨 }
• 조상(ancestor) : 루트까지의 경로상에 있는 모든 노드

// 트리의 종류
• 이진 트리(Binary Tree) - 한 노드에 sub - tree가 최대 2개씩 존재하는 트리
• 일반 트리 - 자료 구조가 매우 복잡해져서 쓰이지 않는다.
*/

/**
 * 이진 트리 (Binary Tree)
 * 한 노드에 sub tree가 최대 2개씩 존재하는 트리

 *  노드가 n개면 트리의 차수는 n - 1개 이다.
    노드가 n개인 경우 이진트리의 최대 높이는 n , 최소 높이는 log2(n + 1)이다

 * 이진 트리의 표현
    1차원 배열의 노드에 저장 , 이 때 이진 트리를 포화 이진 트리로 가정하여 numbering
    index 0번은 비워두고 index 1번부터 저장 , 이 때 1번은 root node
*/

/**
 * 포화 이진 트리 (Full bianry tree)
 * 자식 노드를 가진 모든 노드가 2개의 sub tree를 가지는 이진 트리
 * 깊이가 k일 때 최대 노드의 개수가 2^k - 1의 노드를 가진 이진트리
*/

/**
 * 완전 이진 트리 (Complete binary tree)
 * k의 레벨을 가진 이진 트리가 레벨 1부터 k - 1까지 채워져 있을 때 레벨 k에서 왼쪽부터 오른쪽으로 순서대로 node를 채워져 있는 이진트리
*/

/**
 * 편향 이진 트리
 * 한쪽으로만 치우쳐져 있는 방향으로만 뻗어져 있는 이진 트리
 * 편향 이진 트리의 층 수는 노드의 갯수와 같다.
*/

